{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CinemaService = /*#__PURE__*/(() => {\n  class CinemaService {\n    constructor(http) {\n      this.http = http;\n      this.GENERAL_PATH = \"http://127.0.0.1:5000\";\n    }\n    getSchedules() {\n      const endpoint = '/schedule'; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    getScheduleById(scheduleid) {\n      const endpoint = `/schedule/id/${scheduleid}`; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    getCinemas() {\n      const endpoint = '/cinemas';\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    getSchedulesByCinemaId(cinemaId) {\n      const endpoint = `/schedule/${cinemaId}`; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    getSchedulesByGenre(genre) {\n      const endpoint = `/schedule/genre/${genre}`; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    getSchedulesByCinemaIdAndGenre(cinemaId, genre) {\n      const endpoint = `/schedule/genre/${genre}/${cinemaId}`; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n    addClient(name, email, phoneNumber) {\n      const endpoint = `/client`; // Replace with your endpoint URL\n      const data = {\n        \"name\": name,\n        \"email\": email,\n        \"phone\": phoneNumber\n      };\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(this.GENERAL_PATH + endpoint, data, {\n        headers\n      });\n    }\n    checkTicketByStatus(movieid, row, col) {\n      const endpoint = `/check_ticket_status/${movieid}/${row}/${col}`; // Replace with your endpoint URL\n      return this.http.get(this.GENERAL_PATH + endpoint);\n    }\n  }\n  CinemaService.ɵfac = function CinemaService_Factory(t) {\n    return new (t || CinemaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CinemaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CinemaService,\n    factory: CinemaService.ɵfac,\n    providedIn: 'root'\n  });\n  return CinemaService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}